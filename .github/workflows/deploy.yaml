name: Deploy FastAPI to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Python Environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 4. Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 5. Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "beta"

      # 6. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 7. Login to Google Container Registry
      - name: Login to Google Container Registry
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      # 8. Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/synthesis-api:latest
          platforms: linux/amd64
          build-args: |
            TARGETPLATFORM=linux/amd64

      # 9. Verify Build and Push
      - name: Verify Next Step
        run: echo "Docker build and push completed successfully."

      # 10. Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy synthesis-api \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/synthesis-api:latest \
            --platform managed \
            --region europe-west1 \
            --allow-unauthenticated \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --memory 2Gi \
            --timeout 300s \
            --set-env-vars=ENVIRONMENT=production,REFERENCE_DATA_URL=${{ secrets.REFERENCE_DATA_URL }}
